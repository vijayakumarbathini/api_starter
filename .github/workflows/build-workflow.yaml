name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main   # Trigger on push to the main branch
  pull_request:
    branches:
      - main   # Trigger on pull request to the main branch

jobs:
  build:
    runs-on:
     - self-hosted   # You can change this to another runner if needed

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Docker Buildx (for multi-platform support if needed)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

#      # Cache Docker layers to speed up builds
#      - name: Cache Docker layers
#        uses: actions/cache@v2
#        with:
#          path: /tmp/.buildx-cache
#          key: ${{ runner.os }}-docker-${{ github.sha }}
#          restore-keys: |
#            ${{ runner.os }}-docker-

      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build --build-arg firstName=${{ secrets.FIRST_NAME }} -t api_starter .

      # Push Docker image to Docker Hub (if desired)
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}

#      - name: Push Docker image
#        run: |
#          docker push my-springboot-app:latest

      # Run the Docker container with environment variables (optional)
      - name: Run Docker container with environment variables
        run: |
          docker run -d -p 8080:8080 \
          -e firstName=${{ secrets.FIRST_NAME }} \
          --name my-springboot-container api_starter

#      # Optional: Test if the container is up and running (basic health check)
#      - name: Health Check for Running Container
#        run: |
#          docker exec my-springboot-container curl --fail http://localhost:8080/actuator/health || exit 1
